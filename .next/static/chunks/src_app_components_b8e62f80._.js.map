{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mario%20GGS/fp-ecommerce/src/app/components/carousel.tsx"],"sourcesContent":["\"use client\"; // Indica que este componente debe ser renderizado en el cliente\n\nimport { useEffect, useState } from \"react\"; // Importa hooks de React\n\n// Array de rutas de las imágenes del carrusel\nconst carouselImages = [\n  \"/portadaCarousel1.jpg\",\n  \"/portadaCarousel2.jpg\",\n  \"/portadaCarousel3.jpg\",\n];\n\nconst Carousel = ({\n  text1,\n  text2,\n  text3,\n  text4,\n}: {\n  text1: string;\n  text2: string;\n  text3: string;\n  text4: string;\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0); // Estado para el índice actual de la imagen\n\n  useEffect(() => {\n    // Configura un intervalo para cambiar la imagen cada 8 segundos\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % carouselImages.length);\n    }, 5000); // Cambia de imagen cada 5 segundos\n\n    // Limpia el intervalo cuando el componente se desmonta\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"relative w-full overflow-hidden\">\n      {/* Contenedor del texto */}\n      <div className=\"absolute z-20 top-1/3 left-80\">\n        <h2 className=\"text-white text-3xl font-bold\">{text1}</h2>\n        <h1 className=\"text-white text-7xl font-bold\">{text2}</h1>\n        <h1 className=\"text-white text-7xl font-bold\">{text3}</h1>\n        <h2 className=\"text-white text-5xl font-bold\">{text4}</h2>\n      </div>\n      {/* Contenedor del carrusel */}\n      <div\n        className=\"flex transition-transform duration-1000\"\n        style={{ transform: `translateX(-${currentIndex * 100}%)` }} // Transición para mover las imágenes\n      >\n        {carouselImages.map((image, index) => (\n          <div key={index} className=\"min-w-full\">\n            {/* Cada imagen ocupa el 100% del ancho del contenedor */}\n            <img\n              src={image}\n              alt={`Slide ${index + 1}`}\n              className=\"w-full h-150\" // Imagen con ancho completo y altura automática\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel; // Exporta el componente Carousel\n"],"names":[],"mappings":";;;;AAEA,mRAA6C,yBAAyB;;;AAFtE,cAAc,gEAAgE;;AAI9E,8CAA8C;AAC9C,MAAM,iBAAiB;IACrB;IACA;IACA;CACD;AAED,MAAM,WAAW,CAAC,EAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAMN;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,4CAA4C;IAEjG,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,gEAAgE;YAChE,MAAM,WAAW;+CAAY;oBAC3B;uDAAgB,CAAC,YAAc,CAAC,YAAY,CAAC,IAAI,eAAe,MAAM;;gBACxE;8CAAG,OAAO,mCAAmC;YAE7C,uDAAuD;YACvD;sCAAO,IAAM,cAAc;;QAC7B;6BAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAiC;;;;;;kCAC/C,6LAAC;wBAAG,WAAU;kCAAiC;;;;;;kCAC/C,6LAAC;wBAAG,WAAU;kCAAiC;;;;;;kCAC/C,6LAAC;wBAAG,WAAU;kCAAiC;;;;;;;;;;;;0BAGjD,6LAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,WAAW,CAAC,YAAY,EAAE,eAAe,IAAI,EAAE,CAAC;gBAAC;0BAEzD,eAAe,GAAG,CAAC,CAAC,OAAO,sBAC1B,6LAAC;wBAAgB,WAAU;kCAEzB,cAAA,6LAAC;4BACC,KAAK;4BACL,KAAK,CAAC,MAAM,EAAE,QAAQ,GAAG;4BACzB,WAAU,eAAe,gDAAgD;;;;;;uBALnE;;;;;;;;;;;;;;;;AAYpB;GAlDM;KAAA;uCAoDS;;;;;;CAAU,iCAAiC","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mario%20GGS/fp-ecommerce/src/app/components/sliderproducts.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useCart } from \"../index/carrito\";\nimport { supabase } from \"../lib/supabaseClient\";\n\n// Actualizar las interfaces para incluir campos de imagen\ninterface Producto {\n  id_producto: number;\n  nombre_producto: string;\n  peso_producto: string;\n  id_categoria: number;\n}\n\ninterface Precio {\n  id_precio: number;\n  precio_producto: number;\n  id_producto: number;\n  id_establecimiento: number;\n  establecimientos?: {\n    nombre_establecimiento: string;\n    direccion_establecimiento?: string;\n    municipio_establecimiento?: string;\n  };\n}\n\n// Actualizar la interfaz ProductoConPrecio para incluir imagen\ninterface ProductoConPrecio {\n  id: number;\n  nombre: string;\n  precio: number;\n  establecimiento: string;\n  direccion_establecimiento?: string;\n  municipio_establecimiento?: string;\n  id_establecimiento: number;\n  imagen?: string; // URL de la imagen\n}\n\nconst Products = () => {\n  const [loading, setLoading] = useState(true);\n  const [productos, setProductos] = useState<ProductoConPrecio[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [cantidades, setCantidades] = useState<{ [key: number]: number }>({});\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  // Número de productos a mostrar a la vez (según el ancho de pantalla)\n  const [productsToShow, setProductsToShow] = useState(4);\n\n  useEffect(() => {\n    // Función para ajustar el número de productos según el ancho de pantalla\n    function handleResize() {\n      const width = window.innerWidth;\n      if (width < 640) {\n        setProductsToShow(1);\n      } else if (width < 768) {\n        setProductsToShow(2);\n      } else if (width < 1024) {\n        setProductsToShow(3);\n      } else {\n        setProductsToShow(4);\n      }\n    }\n\n    // Configurar el listener para el resize\n    handleResize(); // Llamada inicial\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    const fetchProductosAleatorios = async () => {\n      try {\n        console.log(\"Obteniendo productos aleatorios...\");\n\n        // 1. Obtener todos los productos incluyendo el id_img\n        const { data: productosData, error: productosError } = await supabase\n          .from(\"productos\")\n          .select(\"id_producto, nombre_producto\");\n\n        if (productosError) {\n          throw productosError;\n        }\n\n        if (!productosData || productosData.length === 0) {\n          setError(\"No se encontraron productos\");\n          return;\n        }\n\n        // 2. Seleccionar 8 productos aleatorios\n        const productosAleatorios = getRandomItems(productosData, 8);\n        console.log(\"Productos aleatorios seleccionados:\", productosAleatorios);\n\n        // 3. Para cada producto aleatorio, obtener su mejor precio y su imagen\n        const productosConPrecios: ProductoConPrecio[] = [];\n        const cantidadesIniciales: { [key: number]: number } = {};\n\n        for (const producto of productosAleatorios) {\n          // Obtener los precios para este producto\n          const { data: preciosData, error: preciosError } = await supabase\n            .from(\"precios\")\n            .select(\n              `\n              precio_producto,\n              id_establecimiento,\n              establecimientos(\n                nombre_establecimiento, \n                direccion_establecimiento, \n                municipio_establecimiento\n              )\n            `\n            )\n            .eq(\"id_producto\", producto.id_producto)\n            .order(\"precio_producto\", { ascending: true })\n            .limit(1);\n\n          if (preciosError) {\n            console.error(\n              `Error al obtener precios para el producto ${producto.id_producto}:`,\n              preciosError\n            );\n            continue;\n          }\n\n          // Obtener la imagen si existe\n          let imageUrl: string | undefined = undefined;\n\n          if (preciosData && preciosData.length > 0) {\n            const precio = preciosData[0];\n            productosConPrecios.push({\n              id: producto.id_producto,\n              nombre: producto.nombre_producto,\n              precio: precio.precio_producto,\n              establecimiento:\n                precio.establecimientos?.nombre_establecimiento ||\n                \"Desconocido\",\n              direccion_establecimiento:\n                precio.establecimientos?.direccion_establecimiento,\n              municipio_establecimiento:\n                precio.establecimientos?.municipio_establecimiento,\n              id_establecimiento: precio.id_establecimiento,\n            });\n\n            // Inicializar cantidad para este producto\n            cantidadesIniciales[producto.id_producto] = 1;\n          }\n        }\n\n        console.log(\"Productos con precios e imágenes:\", productosConPrecios);\n        setProductos(productosConPrecios);\n        setCantidades(cantidadesIniciales);\n      } catch (error) {\n        console.error(\"Error al obtener productos aleatorios:\", error);\n        setError(\"Error al cargar los productos\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProductosAleatorios();\n  }, []);\n\n  // Resto de funciones auxiliares\n  const getRandomItems = (arr: any[], count: number) => {\n    const shuffled = [...arr].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n\n  const incrementarCantidad = (productoId: number) => {\n    setCantidades((prev) => ({\n      ...prev,\n      [productoId]: (prev[productoId] || 1) + 1,\n    }));\n  };\n\n  const decrementarCantidad = (productoId: number) => {\n    setCantidades((prev) => ({\n      ...prev,\n      [productoId]: Math.max(1, (prev[productoId] || 1) - 1),\n    }));\n  };\n\n  const { addItem, openCart } = useCart();\n\n  // Actualizar función agregarALista para incluir correctamente la cantidad\n  const agregarALista = (producto: ProductoConPrecio, cantidad: number) => {\n    // Verificar que la cantidad sea al menos 1\n    const cantidadFinal = Math.max(1, cantidad);\n\n    console.log(\n      `Añadiendo ${cantidadFinal} unidades de ${producto.nombre} al carrito`\n    );\n\n    addItem(\n      {\n        id: producto.id,\n        nombre: producto.nombre,\n        precio: producto.precio,\n        establecimiento: producto.establecimiento,\n      },\n      cantidadFinal\n    ); // Aquí pasas la cantidad como segundo parámetro\n\n    // Abre el carrito al agregar un producto\n    openCart();\n  };\n\n  // Funciones para el slider\n  const nextSlide = () => {\n    if (currentIndex + productsToShow >= productos.length) {\n      // Si estamos al final, volver al principio\n      setCurrentIndex(0);\n    } else {\n      // Avanzar\n      setCurrentIndex((prev) => prev + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (currentIndex === 0) {\n      // Si estamos al principio, ir al final\n      setCurrentIndex(Math.max(0, productos.length - productsToShow));\n    } else {\n      // Retroceder\n      setCurrentIndex((prev) => prev - 1);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center py-8\">Cargando productos...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center py-8 text-red-600\">{error}</div>;\n  }\n\n  // Productos visibles actualmente en el slider\n  const visibleProducts = productos.slice(\n    currentIndex,\n    currentIndex + productsToShow\n  );\n\n  return (\n    <div className=\"max-w-[1240px] mx-auto p-4 relative\">\n      {/* Contenedor del slider con botones de navegación */}\n      <div className=\"relative mb-14\">\n        {/* Botón anterior - Ajustado más a la izquierda */}\n        <button\n          onClick={prevSlide}\n          className=\"absolute left-0 top-1/2 -translate-y-1/2 -ml-8 z-20 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 focus:outline-none\"\n          disabled={currentIndex === 0 && productos.length <= productsToShow}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M15 19l-7-7 7-7\"\n            />\n          </svg>\n        </button>\n\n        {/* Contenedor de productos - Ajustado con más padding */}\n        <div\n          ref={sliderRef}\n          className=\"flex transition-all duration-300 ease-in-out gap-4 px-10\"\n        >\n          {visibleProducts.map((producto) => {\n            const cantidad = cantidades[producto.id] || 1;\n\n            return (\n              <div\n                key={producto.id}\n                className=\"bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 flex flex-col h-[500px] min-w-[275px] max-w-[300px] flex-1 overflow-hidden\"\n              >\n                {/* Imagen - Ahora usamos Image de Next.js cuando hay imagen disponible */}\n                <div className=\"h-40 bg-gray-100 rounded-lg mb-4 flex items-center justify-center flex-shrink-0 relative overflow-hidden\">\n                  {producto.imagen ? (\n                    <Image\n                      src={producto.imagen}\n                      alt={producto.nombre}\n                      fill\n                      sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                      style={{ objectFit: \"contain\" }}\n                      className=\"p-2\"\n                    />\n                  ) : (\n                    <span className=\"text-gray-400 text-center px-2\">\n                      {producto.nombre}\n                    </span>\n                  )}\n                </div>\n\n                {/* Información del producto - Contenedor con overflow hidden */}\n                <div className=\"mb-4 flex-1 overflow-hidden\">\n                  <h3 className=\"font-bold text-lg mb-2 line-clamp-2\">\n                    {producto.nombre}\n                  </h3>\n                  <div className=\"mb-2\">\n                    <p className=\"text-gray-600 text-sm mb-1\">\n                      Menor precio en:\n                    </p>\n                    <p className=\"text-gray-800 font-medium text-sm mb-2 break-words line-clamp-2\">\n                      {producto.establecimiento}\n                    </p>\n                    {producto.municipio_establecimiento && (\n                      <p className=\"text-gray-500 text-xs\">\n                        {producto.municipio_establecimiento}\n                      </p>\n                    )}\n                  </div>\n                  <p className=\"text-red-600 font-bold text-xl\">\n                    ${producto.precio.toFixed(2)}\n                  </p>\n                </div>\n\n                {/* Controles de cantidad - Tamaño reducido */}\n                <div className=\"flex items-center mb-3 flex-shrink-0\">\n                  <span className=\"mr-2 text-xs font-medium\">Cantidad:</span>\n                  <div className=\"flex items-center border border-gray-300 rounded\">\n                    <button\n                      onClick={(e) => {\n                        e.preventDefault();\n                        decrementarCantidad(producto.id);\n                      }}\n                      className=\"px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-bold text-sm\"\n                    >\n                      -\n                    </button>\n                    <span className=\"px-2 py-1 min-w-[25px] text-center text-sm\">\n                      {cantidad}\n                    </span>\n                    <button\n                      onClick={(e) => {\n                        e.preventDefault();\n                        incrementarCantidad(producto.id);\n                      }}\n                      className=\"px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-bold text-sm\"\n                    >\n                      +\n                    </button>\n                  </div>\n                </div>\n\n                {/* Contenedor para los botones - Más compacto */}\n                <div className=\"mt-auto grid grid-cols-1 gap-2 flex-shrink-0\">\n                  <Link\n                    href={`/productname?nombre=${encodeURIComponent(\n                      producto.nombre\n                    )}`}\n                    className=\"bg-blue-600 text-white py-2 px-3 rounded text-center hover:bg-blue-700 transition-colors text-sm\"\n                  >\n                    Ver detalles\n                  </Link>\n                  <button\n                    onClick={(e) => {\n                      e.preventDefault();\n                      const cantidadActual = cantidades[producto.id] || 1;\n                      agregarALista(producto, cantidadActual);\n                    }}\n                    className=\"bg-red-600 text-white py-2 px-3 rounded text-center hover:bg-red-700 transition-colors flex items-center justify-center text-sm\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-4 w-4 mr-1\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\n                      />\n                    </svg>\n                    Agregar a la lista\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Botón siguiente - Ajustado más a la derecha */}\n        <button\n          onClick={nextSlide}\n          className=\"absolute right-0 top-1/2 -translate-y-1/2 -mr-8 z-20 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 focus:outline-none\"\n          disabled={\n            currentIndex >= productos.length - productsToShow &&\n            productos.length <= productsToShow\n          }\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 5l7 7-7 7\"\n            />\n          </svg>\n        </button>\n\n        {/* Indicadores de paginación - Colocados en la parte inferior con más espacio */}\n        <div className=\"absolute bottom-[-30px] left-0 right-0 flex justify-center gap-2\">\n          {Array.from({\n            length: Math.ceil(productos.length / productsToShow),\n          }).map((_, index) => (\n            <button\n              key={index}\n              onClick={() => setCurrentIndex(index * productsToShow)}\n              className={`h-2 w-10 rounded-full transition-all ${\n                index === Math.floor(currentIndex / productsToShow)\n                  ? \"bg-red-600\"\n                  : \"bg-gray-300\"\n              }`}\n              aria-label={`Ir a página ${index + 1}`}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}