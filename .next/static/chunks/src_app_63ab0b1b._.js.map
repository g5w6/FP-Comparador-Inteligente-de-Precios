{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mario%20GGS/fp-ecommerce/src/app/components/sproduct.tsx"],"sourcesContent":["\"use client\"; // Indica que este componente debe ser renderizado en el cliente\n\nimport Image from \"next/image\";\nimport { useState } from \"react\";\n\ninterface SliderProductsProps {\n  image: string;\n  name: string;\n  oldPrice: number;\n  newPrice: number;\n}\n\n// Componente del slider products\nconst SliderProducts: React.FC<SliderProductsProps> = ({\n  image,\n  name,\n  oldPrice,\n  newPrice,\n}) => {\n  const [quantity, setQuantity] = useState(1);\n\n  const increaseQuantity = () => setQuantity(quantity + 1);\n  const decreaseQuantity = () => {\n    if (quantity > 1) setQuantity(quantity - 1);\n  };\n\n  return (\n    <div\n      className=\" mt-6 rounded-lg p-2 w-85 h-160 shadow-lg bg-white flex flex-col\n    hover:border-1 focus:outline-2 transition-transform duration-300 ease-in-out transform hover:scale-105\"\n    >\n      <div className=\"flex justify-center my-2 flex-grow\">\n        <div className=\"relative w-full h-95\">\n          {\" \"}\n          {/* Ajusta el tamaño del contenedor de la imagen */}\n          <Image\n            src={image}\n            alt={name}\n            layout=\"fill\" // Usa layout=\"fill\" para que la imagen llene el contenedor\n            objectFit=\"contain\" // Usa objectFit=\"contain\" para que la imagen se ajuste sin desbordarse\n            className=\"rounded-md\"\n          />\n        </div>\n      </div>\n\n      {/* Inicio de div con el nombre del producto y precios */}\n      <div className=\"mb-2\">\n        <h3 className=\"text-center text-gray-800 text-lg overflow-hidden text-ellipsis whitespace-nowrap max-h-12\">\n          {name}\n        </h3>\n        <div className=\"text-center mt-2\">\n          <p className=\"text-gray-500 line-through text-lg\">\n            ${oldPrice.toFixed(2)}\n          </p>\n          <p className=\"text-red-600 font-bold text-xl\">\n            ${newPrice.toFixed(2)}\n          </p>\n        </div>\n      </div>\n      {/* Fin de div con el nombre del producto y precios */}\n\n      {/* Inicio de div con botones de cantidad y agregar a la lista */}\n      <div>\n        <div className=\"flex justify-center items-center gap-2 mt-3\">\n          <button\n            onClick={decreaseQuantity}\n            className=\"bg-gray-300 text-black px-2 rounded\"\n          >\n            -\n          </button>\n          <span className=\"text-lg font-semibold\">{quantity}</span>\n          <button\n            onClick={increaseQuantity}\n            className=\"bg-gray-300 text-black px-2 rounded\"\n          >\n            +\n          </button>\n        </div>\n        <button className=\"bg-black text-white w-full mt-3 py-2 rounded-lg\">\n          Agregar a la lista\n        </button>\n      </div>\n      {/* Fin de div con botones de cantidad y agregar a la lista */}\n    </div>\n  );\n};\n\n//  Componente Products (lista de productos)\nconst Sproduct = () => {\n  const products = [\n    {\n      image: \"/high-angle-tasty-fruits-arrangement.jpg\",\n      name: \"Aguacates Hass en su punto.\",\n      oldPrice: 79.99,\n      newPrice: 71.99,\n    },\n    {\n      image: \"/fresh-banana-orange-strawberries-blue-board-min.jpg\",\n      name: \"Muslos de pollo sin hueso.\",\n      oldPrice: 76.5,\n      newPrice: 68.85,\n    },\n    {\n      image: \"/close-up-assortment-organic-fruits-min.jpg\",\n      name: \"Filete de atún 0.5 kg.\",\n      oldPrice: 399.99,\n      newPrice: 359.99,\n    },\n    {\n      image: \"/farzad-p-xSl33Wxyc-unsplash.jpg\",\n      name: \"Queso crema para untar 8 oz.\",\n      oldPrice: 49.99,\n      newPrice: 44.99,\n    },\n    {\n      image: \"/high-angle-tasty-fruits-arrangement.jpg\",\n      name: \"Queso crema para untar 8 oz.\",\n      oldPrice: 49.99,\n      newPrice: 44.99,\n    },\n  ];\n\n  return (\n    <div className=\"flex gap-4 overflow-x-auto p-5\">\n      {products.map((product, index) => (\n        <SliderProducts key={index} {...product} />\n      ))}\n    </div>\n  );\n};\n\ninterface PrecioProps {\n  productoId: number;\n  establecimiento: string;\n  precio: number;\n}\n\ninterface ProductsProps {\n  precios: PrecioProps[];\n}\n\nconst Products = ({ precios = [] }: ProductsProps) => {\n  if (precios.length === 0) {\n    return (\n      <div className=\"text-center p-4\">\n        No se encontraron precios para este producto\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {precios.map((precio, index) => (\n          <div\n            key={index}\n            className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300\"\n          >\n            <div className=\"h-48 bg-gray-200 relative\">\n              {/* Puedes reemplazar esto con imágenes reales de los establecimientos */}\n              <Image\n                src={`/images/stores/placeholder.jpg`}\n                alt={precio.establecimiento}\n                fill\n                className=\"object-cover\"\n              />\n            </div>\n            <div className=\"p-6\">\n              <h2 className=\"font-bold text-xl mb-2\">\n                {precio.establecimiento}\n              </h2>\n              <p className=\"text-gray-700 text-lg font-semibold\">\n                ${precio.precio.toFixed(2)}\n              </p>\n              <div className=\"mt-4\">\n                <button className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors\">\n                  Ver detalles\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA,cAAc,gEAAgE;;;AAY9E,iCAAiC;AACjC,MAAM,iBAAgD,CAAC,EACrD,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,QAAQ,EACT;;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,mBAAmB,IAAM,YAAY,WAAW;IACtD,MAAM,mBAAmB;QACvB,IAAI,WAAW,GAAG,YAAY,WAAW;IAC3C;IAEA,qBACE,6LAAC;QACC,WAAU;;0BAGV,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;wBACZ;sCAED,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK;4BACL,KAAK;4BACL,QAAO,OAAO,2DAA2D;;4BACzE,WAAU,UAAU,uEAAuE;;4BAC3F,WAAU;;;;;;;;;;;;;;;;;0BAMhB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCACX;;;;;;kCAEH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;;oCAAqC;oCAC9C,SAAS,OAAO,CAAC;;;;;;;0CAErB,6LAAC;gCAAE,WAAU;;oCAAiC;oCAC1C,SAAS,OAAO,CAAC;;;;;;;;;;;;;;;;;;;0BAOzB,6LAAC;;kCACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;0CAGD,6LAAC;gCAAK,WAAU;0CAAyB;;;;;;0CACzC,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;kCAIH,6LAAC;wBAAO,WAAU;kCAAkD;;;;;;;;;;;;;;;;;;AAO5E;GAxEM;KAAA;AA0EN,4CAA4C;AAC5C,MAAM,WAAW;IACf,MAAM,WAAW;QACf;YACE,OAAO;YACP,MAAM;YACN,UAAU;YACV,UAAU;QACZ;QACA;YACE,OAAO;YACP,MAAM;YACN,UAAU;YACV,UAAU;QACZ;QACA;YACE,OAAO;YACP,MAAM;YACN,UAAU;YACV,UAAU;QACZ;QACA;YACE,OAAO;YACP,MAAM;YACN,UAAU;YACV,UAAU;QACZ;QACA;YACE,OAAO;YACP,MAAM;YACN,UAAU;YACV,UAAU;QACZ;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,6LAAC;gBAA4B,GAAG,OAAO;eAAlB;;;;;;;;;;AAI7B;MAzCM;AAqDN,MAAM,WAAW,CAAC,EAAE,UAAU,EAAE,EAAiB;IAC/C,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,qBACE,6LAAC;YAAI,WAAU;sBAAkB;;;;;;IAIrC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC;oBAEC,WAAU;;sCAEV,6LAAC;4BAAI,WAAU;sCAEb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK,CAAC,8BAA8B,CAAC;gCACrC,KAAK,OAAO,eAAe;gCAC3B,IAAI;gCACJ,WAAU;;;;;;;;;;;sCAGd,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CACX,OAAO,eAAe;;;;;;8CAEzB,6LAAC;oCAAE,WAAU;;wCAAsC;wCAC/C,OAAO,MAAM,CAAC,OAAO,CAAC;;;;;;;8CAE1B,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAO,WAAU;kDAA6E;;;;;;;;;;;;;;;;;;mBApB9F;;;;;;;;;;;;;;;AA8BjB;MA5CM;uCA8CS","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mario%20GGS/fp-ecommerce/src/app/productname/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useSearchParams } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport Products from \"../components/sproduct\";\nimport { supabase } from \"../lib/supabaseClient\";\n\ninterface Precio {\n  id_precio: number;\n  precio_producto: number;\n  id_producto: number;\n  id_establecimiento: number;\n  establecimientos: {\n    id_establecimiento: number;\n    nombre_establecimiento: string;\n  };\n}\n\nexport default function Page() {\n  const searchParams = useSearchParams();\n  const nombreProducto = searchParams.get(\"nombre\") || \"Producto\";\n  const [precios, setPrecios] = useState<\n    Array<{\n      productoId: number;\n      establecimiento: string;\n      precio: number;\n    }>\n  >([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchPreciosProducto() {\n      try {\n        // 1. Obtener el ID del producto basado en el nombre\n        const { data: productos, error: errorProductos } = await supabase\n          .from(\"productos\")\n          .select(\"id_producto\")\n          .eq(\"nombre_producto\", nombreProducto)\n          .limit(1);\n\n        if (errorProductos) throw errorProductos;\n        if (!productos || productos.length === 0) {\n          setError(\"No se encontró el producto\");\n          setLoading(false);\n          return;\n        }\n\n        const productoId = productos[0].id_producto;\n\n        // 2. Obtener los precios para este producto junto con información del establecimiento\n        const { data: preciosData, error: errorPrecios } = await supabase\n          .from(\"precios\")\n          .select(\n            `\n            id_precio, \n            precio_producto, \n            id_producto, \n            establecimientos:establecimientos(\n              id_establecimiento,\n              nombre_establecimiento\n            )\n          `\n          )\n          .eq(\"id_producto\", productoId);\n\n        if (errorPrecios) throw errorPrecios;\n\n        console.log(\"Datos de precios recibidos:\", preciosData);\n\n        // 3. Formatear los datos correctamente según la estructura de la respuesta\n        const preciosFormateados = preciosData.map((item) => {\n          // Acceder correctamente al nombre del establecimiento según la estructura real de los datos\n          let nombreEstablecimiento = \"Establecimiento desconocido\";\n\n          // Adaptamos esto según cómo Supabase devuelve los datos relacionados\n          // Podrían ser cualquiera de estos formatos:\n          if (\n            item.establecimientos &&\n            typeof item.establecimientos === \"object\"\n          ) {\n            if (Array.isArray(item.establecimientos)) {\n              nombreEstablecimiento =\n                item.establecimientos[0]?.nombre_establecimiento ||\n                nombreEstablecimiento;\n            } else {\n              nombreEstablecimiento =\n                item.establecimientos.nombre_establecimiento ||\n                nombreEstablecimiento;\n            }\n          }\n\n          return {\n            productoId: item.id_producto,\n            establecimiento: nombreEstablecimiento,\n            precio: item.precio_producto,\n          };\n        });\n\n        console.log(\"Precios formateados:\", preciosFormateados);\n        setPrecios(preciosFormateados);\n      } catch (error) {\n        console.error(\"Error al cargar precios:\", error);\n        setError(\"Error al cargar información de precios\");\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchPreciosProducto();\n  }, [nombreProducto]);\n\n  return (\n    <>\n      <div className=\"flex justify-center items-center mt-10\">\n        <h1 className=\"text-6xl\">{nombreProducto}</h1>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center items-center mt-10\">\n          Cargando información del producto...\n        </div>\n      ) : error ? (\n        <div className=\"flex justify-center items-center mt-10 text-red-600\">\n          {error}\n        </div>\n      ) : (\n        <div className=\"flex justify-center items-center\">\n          <Products precios={precios} />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAkBe,SAAS;;IACtB,MAAM,eAAe,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,iBAAiB,aAAa,GAAG,CAAC,aAAa;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAMnC,EAAE;IACJ,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,eAAe;gBACb,IAAI;oBACF,oDAAoD;oBACpD,MAAM,EAAE,MAAM,SAAS,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,sIAAA,CAAA,WAAQ,CAC9D,IAAI,CAAC,aACL,MAAM,CAAC,eACP,EAAE,CAAC,mBAAmB,gBACtB,KAAK,CAAC;oBAET,IAAI,gBAAgB,MAAM;oBAC1B,IAAI,CAAC,aAAa,UAAU,MAAM,KAAK,GAAG;wBACxC,SAAS;wBACT,WAAW;wBACX;oBACF;oBAEA,MAAM,aAAa,SAAS,CAAC,EAAE,CAAC,WAAW;oBAE3C,sFAAsF;oBACtF,MAAM,EAAE,MAAM,WAAW,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,sIAAA,CAAA,WAAQ,CAC9D,IAAI,CAAC,WACL,MAAM,CACL,CAAC;;;;;;;;UAQH,CAAC,EAEA,EAAE,CAAC,eAAe;oBAErB,IAAI,cAAc,MAAM;oBAExB,QAAQ,GAAG,CAAC,+BAA+B;oBAE3C,2EAA2E;oBAC3E,MAAM,qBAAqB,YAAY,GAAG;kFAAC,CAAC;4BAC1C,4FAA4F;4BAC5F,IAAI,wBAAwB;4BAE5B,qEAAqE;4BACrE,4CAA4C;4BAC5C,IACE,KAAK,gBAAgB,IACrB,OAAO,KAAK,gBAAgB,KAAK,UACjC;gCACA,IAAI,MAAM,OAAO,CAAC,KAAK,gBAAgB,GAAG;oCACxC,wBACE,KAAK,gBAAgB,CAAC,EAAE,EAAE,0BAC1B;gCACJ,OAAO;oCACL,wBACE,KAAK,gBAAgB,CAAC,sBAAsB,IAC5C;gCACJ;4BACF;4BAEA,OAAO;gCACL,YAAY,KAAK,WAAW;gCAC5B,iBAAiB;gCACjB,QAAQ,KAAK,eAAe;4BAC9B;wBACF;;oBAEA,QAAQ,GAAG,CAAC,wBAAwB;oBACpC,WAAW;gBACb,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,4BAA4B;oBAC1C,SAAS;gBACX,SAAU;oBACR,WAAW;gBACb;YACF;YAEA;QACF;yBAAG;QAAC;KAAe;IAEnB,qBACE;;0BACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAAY;;;;;;;;;;;YAG3B,wBACC,6LAAC;gBAAI,WAAU;0BAAyC;;;;;uBAGtD,sBACF,6LAAC;gBAAI,WAAU;0BACZ;;;;;qCAGH,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,wIAAA,CAAA,UAAQ;oBAAC,SAAS;;;;;;;;;;;;;AAK7B;GAnHwB;;QACD,qIAAA,CAAA,kBAAe;;;KADd","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}