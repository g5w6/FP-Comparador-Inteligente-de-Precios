{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Mario%20GGS/fp-ecommerce/src/app/productname/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useSearchParams } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport { useCart } from \"../index/carrito\";\nimport { supabase } from \"../lib/supabaseClient\";\n\ninterface Precio {\n  id_precio: number;\n  precio_producto: number;\n  id_producto: number;\n  id_establecimiento: number;\n  establecimientos: {\n    id_establecimiento: number;\n    nombre_establecimiento: string;\n  };\n}\n\ninterface PrecioProps {\n  productoId: number;\n  establecimiento: string;\n  precio: number;\n}\n\ninterface ProductsProps {\n  precios: PrecioProps[];\n}\n\nconst ProductsComponent = ({ precios = [] }: ProductsProps) => {\n  // Estado para rastrear la cantidad de cada producto\n  const [cantidades, setCantidades] = useState<{ [key: string]: number }>(\n    precios.reduce((acc, precio, index) => {\n      acc[`${precio.productoId}-${index}`] = 1;\n      return acc;\n    }, {} as { [key: string]: number })\n  );\n\n  const { addItem, openCart } = useCart();\n\n  // Función para incrementar la cantidad\n  const incrementarCantidad = (productoId: number, index: number) => {\n    const key = `${productoId}-${index}`;\n    setCantidades({\n      ...cantidades,\n      [key]: (cantidades[key] || 1) + 1,\n    });\n  };\n\n  // Función para decrementar la cantidad (mínimo 1)\n  const decrementarCantidad = (productoId: number, index: number) => {\n    const key = `${productoId}-${index}`;\n    if (cantidades[key] > 1) {\n      setCantidades({\n        ...cantidades,\n        [key]: cantidades[key] - 1,\n      });\n    }\n  };\n\n  // Función para agregar a la lista\n  const agregarALista = (\n    productoId: number,\n    establecimiento: string,\n    precio: number,\n    cantidad: number\n  ) => {\n    addItem(\n      {\n        id: productoId,\n        nombre: nombreProducto, // Obtenido del parámetro de la URL\n        precio: precio,\n        establecimiento: establecimiento,\n      },\n      cantidad\n    );\n    openCart(); // Abre el carrito al agregar un producto\n  };\n\n  if (precios.length === 0) {\n    return (\n      <div className=\"text-center p-4\">\n        No se encontraron precios para este producto\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {precios.map((precio, index) => {\n          const key = `${precio.productoId}-${index}`;\n          const cantidad = cantidades[key] || 1;\n\n          return (\n            <div\n              key={index}\n              className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300\"\n            >\n              <div className=\"h-48 bg-gray-200 relative\">\n                {/* Placeholder para imagen del establecimiento */}\n                <div className=\"w-full h-full flex items-center justify-center bg-gray-100 text-gray-400\">\n                  <span>{precio.establecimiento}</span>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h2 className=\"font-bold text-xl mb-2\">\n                  {precio.establecimiento}\n                </h2>\n                <p className=\"text-gray-700 text-lg font-semibold mb-4\">\n                  ${precio.precio.toFixed(2)}\n                </p>\n\n                {/* Controles de cantidad */}\n                <div className=\"flex items-center mb-4\">\n                  <span className=\"mr-3 text-sm font-medium\">Cantidad:</span>\n                  <div className=\"flex items-center border border-gray-300 rounded\">\n                    <button\n                      onClick={() =>\n                        decrementarCantidad(precio.productoId, index)\n                      }\n                      className=\"px-3 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700\"\n                    >\n                      -\n                    </button>\n                    <span className=\"px-4 py-1\">{cantidad}</span>\n                    <button\n                      onClick={() =>\n                        incrementarCantidad(precio.productoId, index)\n                      }\n                      className=\"px-3 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700\"\n                    >\n                      +\n                    </button>\n                  </div>\n                </div>\n\n                {/* Total */}\n                <p className=\"text-sm mb-4\">\n                  Total:{\" \"}\n                  <span className=\"font-bold\">\n                    ${(precio.precio * cantidad).toFixed(2)}\n                  </span>\n                </p>\n\n                {/* Botón para agregar a la lista */}\n                <button\n                  onClick={() =>\n                    agregarALista(\n                      precio.productoId,\n                      precio.establecimiento,\n                      precio.precio,\n                      cantidad\n                    )\n                  }\n                  className=\"w-full bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors flex items-center justify-center\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-2\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n                    />\n                  </svg>\n                  Agregar a la lista\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// Remove the Products default export since we're exporting Page as default\nexport default function Page() {\n  const searchParams = useSearchParams();\n  const nombreProducto = searchParams.get(\"nombre\") || \"Producto\";\n  const [precios, setPrecios] = useState<\n    Array<{\n      productoId: number;\n      establecimiento: string;\n      precio: number;\n    }>\n  >([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchPreciosProducto() {\n      try {\n        // 1. Obtener el ID del producto basado en el nombre\n        const { data: productos, error: errorProductos } = await supabase\n          .from(\"productos\")\n          .select(\"id_producto\")\n          .eq(\"nombre_producto\", nombreProducto)\n          .limit(1);\n\n        if (errorProductos) throw errorProductos;\n        if (!productos || productos.length === 0) {\n          setError(\"No se encontró el producto\");\n          setLoading(false);\n          return;\n        }\n\n        const productoId = productos[0].id_producto;\n\n        // 2. Obtener los precios para este producto junto con información del establecimiento\n        const { data: preciosData, error: errorPrecios } = await supabase\n          .from(\"precios\")\n          .select(\n            `\n            id_precio, \n            precio_producto, \n            id_producto, \n            establecimientos:establecimientos(\n              id_establecimiento,\n              nombre_establecimiento\n            )\n          `\n          )\n          .eq(\"id_producto\", productoId);\n\n        if (errorPrecios) throw errorPrecios;\n\n        console.log(\"Datos de precios recibidos:\", preciosData);\n\n        // 3. Formatear los datos correctamente según la estructura de la respuesta\n        const preciosFormateados = preciosData.map((item) => {\n          // Acceder correctamente al nombre del establecimiento según la estructura real de los datos\n          let nombreEstablecimiento = \"Establecimiento desconocido\";\n\n          // Adaptamos esto según cómo Supabase devuelve los datos relacionados\n          // Podrían ser cualquiera de estos formatos:\n          if (\n            item.establecimientos &&\n            typeof item.establecimientos === \"object\"\n          ) {\n            if (Array.isArray(item.establecimientos)) {\n              nombreEstablecimiento =\n                item.establecimientos[0]?.nombre_establecimiento ||\n                nombreEstablecimiento;\n            } else {\n              nombreEstablecimiento =\n                item.establecimientos.nombre_establecimiento ||\n                nombreEstablecimiento;\n            }\n          }\n\n          return {\n            productoId: item.id_producto,\n            establecimiento: nombreEstablecimiento,\n            precio: item.precio_producto,\n          };\n        });\n\n        console.log(\"Precios formateados:\", preciosFormateados);\n        setPrecios(preciosFormateados);\n      } catch (error) {\n        console.error(\"Error al cargar precios:\", error);\n        setError(\"Error al cargar información de precios\");\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchPreciosProducto();\n  }, [nombreProducto]);\n\n  return (\n    <>\n      <div className=\"flex justify-center items-center mt-10\">\n        <h1 className=\"text-6xl\">{nombreProducto}</h1>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center items-center mt-10\">\n          Cargando información del producto...\n        </div>\n      ) : error ? (\n        <div className=\"flex justify-center items-center mt-10 text-red-600\">\n          {error}\n        </div>\n      ) : (\n        <div className=\"flex justify-center items-center\">\n          <ProductsComponent precios={precios} />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}